Loading datasets...
Restoring previous...
Epoch 1/300
Train set...
  0%|[35m                                                                            [39m| 0/5322 [00:00<?, ?it/s]
torch.Size([1, 3, 129, 161, 129])
  0%|[35m                                                                            [39m| 0/5322 [00:00<?, ?it/s]/home/tbarba/projects/MultiModalBrainSurvival/src/autoencoder/train_ae.py:56: UserWarning: Using a target size (torch.Size([3, 3, 156, 185, 149])) that is different to the input size (torch.Size([3, 3, 129, 161, 129])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  loss = nn.functional.mse_loss(outputs[0], images) + beta*kld
torch.Size([1, 3, 129, 161, 129])
  0%|[35m                                                                            [39m| 0/5322 [01:04<?, ?it/s]
Traceback (most recent call last):
  File "/home/tbarba/projects/MultiModalBrainSurvival/src/autoencoder/train_ae.py", line 246, in <module>
    main(**config)
  File "/home/tbarba/projects/MultiModalBrainSurvival/src/autoencoder/train_ae.py", line 210, in main
    train_epoch_metrics = train_loop(
  File "/home/tbarba/projects/MultiModalBrainSurvival/src/autoencoder/train_ae.py", line 56, in train_loop
    loss = nn.functional.mse_loss(outputs[0], images) + beta*kld
  File "/labs/gevaertlab/users/thomas/miniconda/envs/multimodal/lib/python3.9/site-packages/torch/nn/functional.py", line 3291, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/labs/gevaertlab/users/thomas/miniconda/envs/multimodal/lib/python3.9/site-packages/torch/functional.py", line 74, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore[attr-defined]
RuntimeError: The size of tensor a (129) must match the size of tensor b (149) at non-singleton dimension 4